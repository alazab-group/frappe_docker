version: '3.8'

x-customizable-image: &customizable_image
  image: ${CUSTOM_IMAGE:-alazab-custom}:${CUSTOM_TAG:-latest}
  pull_policy: ${PULL_POLICY:-never}
  restart: ${RESTART_POLICY:-unless-stopped}

x-depends-on-configurator: &depends_on_configurator
  depends_on:
    configurator:
      condition: service_completed_successfully

x-backend-defaults: &backend_defaults
  <<: [*depends_on_configurator, *customizable_image]
  volumes:
    - sites:/home/frappe/frappe-bench/sites
    - logs:/home/frappe/frappe-bench/logs
  networks:
    - backend
    - frontend

services:
  # ═══════════════════════════════════════════════════════════════
  # خدمة الإعداد - تعمل مرة واحدة لإعداد البيئة
  # ═══════════════════════════════════════════════════════════════
  configurator:
    <<: *customizable_image
    networks:
      - backend
    entrypoint:
      - bash
      - -c
    command:
      - >
        echo "🔧 بدء إعداد البيئة...";
        ls -1 apps > sites/apps.txt;
        bench set-config -g db_host $$DB_HOST;
        bench set-config -gp db_port $$DB_PORT;
        bench set-config -g redis_cache "redis://$$REDIS_CACHE";
        bench set-config -g redis_queue "redis://$$REDIS_QUEUE";
        bench set-config -g redis_socketio "redis://$$REDIS_QUEUE";
        bench set-config -gp socketio_port $$SOCKETIO_PORT;
        echo "✅ تم إعداد البيئة بنجاح";
    environment:
      DB_HOST: ${DB_HOST:-db}
      DB_PORT: ${DB_PORT:-3306}
      REDIS_CACHE: ${REDIS_CACHE:-redis-cache:6379}
      REDIS_QUEUE: ${REDIS_QUEUE:-redis-queue:6379}
      SOCKETIO_PORT: 9000
    volumes:
      - sites:/home/frappe/frappe-bench/sites
      - logs:/home/frappe/frappe-bench/logs
    depends_on: {}
    restart: "no"

  # ═══════════════════════════════════════════════════════════════
  # خدمة الخلفية - تطبيق Frappe/ERPNext الرئيسي
  # ═══════════════════════════════════════════════════════════════
  backend:
    <<: *backend_defaults
    command: >
      bash -c "
        echo '🚀 بدء تشغيل الخدمة الخلفية...';
        gunicorn --chdir=/home/frappe/frappe-bench/sites 
                 --bind=0.0.0.0:8000 
                 --threads=4 
                 --workers=2 
                 --worker-class=gthread 
                 --worker-tmp-dir=/dev/shm 
                 --timeout=120 
                 --preload 
                 frappe.app:application
      "
    environment:
      FRAPPE_SITE_NAME_HEADER: ${FRAPPE_SITE_NAME_HEADER:-erp.alazab.online}
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # ═══════════════════════════════════════════════════════════════
  # خدمة الواجهة الأمامية - Nginx 
  # ═══════════════════════════════════════════════════════════════
  frontend:
    <<: *customizable_image
    networks:
      - frontend
      - backend
    command:
      - nginx-entrypoint.sh
    environment:
      BACKEND: ${BACKEND:-backend:8000}
      SOCKETIO: ${SOCKETIO:-websocket:9000}
      FRAPPE_SITE_NAME_HEADER: ${FRAPPE_SITE_NAME_HEADER:-erp.alazab.online}
      UPSTREAM_REAL_IP_ADDRESS: ${UPSTREAM_REAL_IP_ADDRESS:-0.0.0.0/0}
      UPSTREAM_REAL_IP_HEADER: ${UPSTREAM_REAL_IP_HEADER:-X-Forwarded-For}
      UPSTREAM_REAL_IP_RECURSIVE: ${UPSTREAM_REAL_IP_RECURSIVE:-on}
      PROXY_READ_TIMEOUT: ${PROXY_READ_TIMEOUT:-300s}
      CLIENT_MAX_BODY_SIZE: ${CLIENT_MAX_BODY_SIZE:-100m}
    volumes:
      - sites:/home/frappe/frappe-bench/sites
      - logs:/home/frappe/frappe-bench/logs
    ports:
      - "${HTTP_PUBLISH_PORT:-80}:8080"
    depends_on:
      - backend
      - websocket
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # ═══════════════════════════════════════════════════════════════
  # خدمة WebSocket - للاتصال المباشر
  # ═══════════════════════════════════════════════════════════════
  websocket:
    <<: [*depends_on_configurator, *customizable_image]
    networks:
      - backend
    command:
      - bash
      - -c
      - >
        echo "🔌 بدء تشغيل خدمة WebSocket...";
        node /home/frappe/frappe-bench/apps/frappe/socketio.js
    volumes:
      - sites:/home/frappe/frappe-bench/sites
      - logs:/home/frappe/frappe-bench/logs

  # ═══════════════════════════════════════════════════════════════
  # خدمات الطوابير - معالجة المهام في الخلفية
  # ═══════════════════════════════════════════════════════════════
  queue-short:
    <<: *backend_defaults
    command: >
      bash -c "
        echo '⚡ بدء تشغيل الطابور القصير...';
        bench worker --queue short,default
      "

  queue-long:
    <<: *backend_defaults
    command: >
      bash -c "
        echo '🔄 بدء تشغيل الطابور الطويل...';
        bench worker --queue long,default,short
      "

  # ═══════════════════════════════════════════════════════════════
  # خدمة المجدول - تنفيذ المهام المجدولة
  # ═══════════════════════════════════════════════════════════════
  scheduler:
    <<: *backend_defaults
    command: >
      bash -c "
        echo '📅 بدء تشغيل المجدول...';
        bench schedule
      "

  # ═══════════════════════════════════════════════════════════════
  # قاعدة البيانات - MariaDB
  # ═══════════════════════════════════════════════════════════════
  db:
    image: mariadb:10.6
    restart: unless-stopped
    networks:
      - backend
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD:-Admin123}
      MYSQL_DATABASE: ${DB_NAME:-frappe}
      MYSQL_USER: ${DB_USERNAME:-frappe}
      MYSQL_PASSWORD: ${DB_PASSWORD:-Admin123}
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
      - --skip-character-set-client-handshake
      - --skip-innodb-read-only-compressed
      - --innodb-buffer-pool-size=1G
      - --innodb-log-file-size=256M
      - --max-connections=200
    volumes:
      - db-data:/var/lib/mysql
    ports:
      - "${DB_PORT:-3306}:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${DB_PASSWORD:-Admin123}"]
      interval: 30s
      timeout: 10s
      retries: 5

  # ═══════════════════════════════════════════════════════════════
  # خدمات Redis - التخزين المؤقت والطوابير
  # ═══════════════════════════════════════════════════════════════
  redis-cache:
    image: redis:6.2-alpine
    restart: unless-stopped
    networks:
      - backend
    command: redis-server --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - redis-cache-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis-queue:
    image: redis:6.2-alpine
    restart: unless-stopped
    networks:
      - backend
    command: redis-server --appendonly yes
    volumes:
      - redis-queue-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

# ═══════════════════════════════════════════════════════════════
# الشبكات
# ═══════════════════════════════════════════════════════════════
networks:
  backend:
    driver: bridge
    internal: false
  frontend:
    driver: bridge
    internal: false

# ═══════════════════════════════════════════════════════════════
# أحجام التخزين
# ═══════════════════════════════════════════════════════════════
volumes:
  sites:
    driver: local
  logs:
    driver: local
  db-data:
    driver: local
  redis-cache-data:
    driver: local
  redis-queue-data:
    driver: local
