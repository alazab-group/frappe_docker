version: "3.9"

x-frappe-config: &frappe_config
  image: alazab/frappe-ecosystem:${ERPNEXT_VERSION}
  restart: unless-stopped
  env_file: .env
  networks:
    - alazab-network
  volumes:
    - alazab-sites:/home/frappe/frappe-bench/sites
    - alazab-assets:/home/frappe/frappe-bench/sites/assets
    - /mnt/erpnext_data/repos:/home/frappe/frappe-bench/apps-custom

services:
  # ███████╗ 1. خدمات البنية التحتية ███████╗
  db:
    image: mariadb:10.6
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
    volumes:
      - alazab-db:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - alazab-network

  redis-cache:
    image: redis:6.2-alpine
    command: redis-server --maxmemory 512mb --maxmemory-policy allkeys-lru
    volumes:
      - alazab-redis-cache:/data
    networks:
      - alazab-network

  redis-queue:
    image: redis:6.2-alpine
    volumes:
      - alazab-redis-queue:/data
    networks:
      - alazab-network

  # ███████╗ 2. الخدمات الأساسية ███████╗
  backend:
    <<: *frappe_config
    depends_on:
      db:
        condition: service_healthy
      redis-cache:
        condition: service_started
    command: bench start

  frontend:
    <<: *frappe_config
    ports:
      - "${HTTP_PUBLISH_PORT}:8080"
    command: nginx-entrypoint.sh
    environment:
      - BACKEND=backend:8000
      - SOCKETIO=websocket:9000
    depends_on:
      - backend

  websocket:
    <<: *frappe_config
    command: ["node", "/home/frappe/frappe-bench/apps/frappe/socketio.js"]

  # ███████╗ 3. معالجة المهام ███████╗
  worker-short:
    <<: *frappe_config
    command: bench worker --queue short,default

  worker-long:
    <<: *frappe_config
    command: bench worker --queue long,default

  scheduler:
    <<: *frappe_config
    command: bench schedule

  # ███████╗ 4. خدمات الإدارة ███████╗
  backup:
    image: alpine
    volumes:
      - alazab-sites:/source
      - /mnt/erpnext_data/backups:/backup
    command: >
      sh -c "tar czf /backup/backup-$$(date +'%Y%m%d').tar.gz /source &&
      find /backup -name '*.tar.gz' -mtime +7 -delete"
    restart: on-failure
    depends_on:
      - backend

  certbot:
    image: certbot/certbot
    volumes:
      - alazab-sites:/var/www/html
      - /etc/letsencrypt:/etc/letsencrypt
    command: certonly --webroot -w /var/www/html -d ${FRAPPE_SITE_NAME_HEADER} --email ${LETSENCRYPT_EMAIL} --agree-tos --non-interactive --keep-until-expiring
    depends_on:
      - frontend
    networks:
      - alazab-network

networks:
  alazab-network:
    driver: bridge
    name: alazab-network

volumes:
  alazab-sites:
  alazab-assets:
  alazab-db:
  alazab-redis-cache:
  alazab-redis-queue:
