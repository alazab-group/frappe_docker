user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log notice;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging format
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;

    # Basic settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_tokens off;

    # Client settings
    client_max_body_size 50m;
    client_body_buffer_size 128k;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=login:10m rate=5r/m;
    limit_req_zone $binary_remote_addr zone=api:10m rate=30r/m;

    # SSL settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;

    # Upstream backend servers
    upstream backend {
        least_conn;
        server backend:8000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream websocket {
        server websocket:9000 max_fails=3 fail_timeout=30s;
    }

    # Main server block
    server {
        listen 8080;
        server_name alazab.local erp.alazab.local crm.alazab.local *.alazab.local;
        
        # Security headers
        add_header X-Frame-Options SAMEORIGIN always;
        add_header X-Content-Type-Options nosniff always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;

        # Root directory
        root /usr/share/nginx/html/sites;

        # Index files
        index index.html index.htm;

        # Disable access logs for assets
        location ~* \.(css|js|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            access_log off;
        }

        # Handle favicon
        location = /favicon.ico {
            log_not_found off;
            access_log off;
        }

        # Handle robots.txt
        location = /robots.txt {
            log_not_found off;
            access_log off;
        }

        # Socket.IO endpoint
        location /socket.io/ {
            proxy_pass http://websocket;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            proxy_read_timeout 300;
            proxy_connect_timeout 300;
            proxy_send_timeout 300;
        }

        # API endpoints with rate limiting
        location /api/ {
            limit_req zone=api burst=10 nodelay;
            
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 120;
            proxy_connect_timeout 120;
            proxy_send_timeout 120;
            
            # CORS headers for API
            add_header Access-Control-Allow-Origin "*" always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
            add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization" always;
            
            if ($request_method = 'OPTIONS') {
                add_header Access-Control-Allow-Origin "*";
                add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
                add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization";
                add_header Access-Control-Max-Age 1728000;
                add_header Content-Type 'text/plain; charset=utf-8';
                add_header Content-Length 0;
                return 204;
            }
        }

        # Login endpoint with stricter rate limiting
        location /api/method/login {
            limit_req zone=login burst=3 nodelay;
            
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 120;
        }

        # Handle file uploads
        location /private/ {
            internal;
            try_files /$frappe_site_name$uri =404;
        }

        location /files/ {
            try_files /$frappe_site_name/public$uri @backend;
        }

        location /assets/ {
            try_files /$frappe_site_name/public$uri @backend;
        }

        # Handle app-specific routes
        location /app/ {
            try_files $uri @backend;
        }

        location /desk {
            try_files $uri @backend;
        }

        # CRM specific routes
        location /crm/ {
            try_files $uri @backend;
        }

        # HRMS specific routes
        location /hrms/ {
            try_files $uri @backend;
        }

        # Helpdesk specific routes
        location /helpdesk/ {
            try_files $uri @backend;
        }

        # Webshop specific routes
        location /shop/ {
            try_files $uri @backend;
        }

        # Drive specific routes
        location /drive/ {
            try_files $uri @backend;
        }

        # Insights specific routes
        location /insights/ {
            try_files $uri @backend;
        }

        # Books specific routes
        location /books/ {
            try_files $uri @backend;
        }

        # Print Designer specific routes
        location /print-designer/ {
            try_files $uri @backend;
        }

        # Price Estimation specific routes
        location /estimation/ {
            try_files $uri @backend;
        }

        # Main backend fallback
        location @backend {
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 120;
            proxy_connect_timeout 120;
            proxy_send_timeout 120;
        }

        # Default location
        location / {
            try_files /$frappe_site_name/public$uri @backend;
        }

        # Health check endpoint
        location /nginx-health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }

    # SSL redirect server (for production)
    server {
        listen 80;
        server_name alazab.local erp.alazab.local crm.alazab.local *.alazab.local;
        return 301 https://$server_name$request_uri;
    }

    # HTTPS server (for production)
    server {
        listen 443 ssl http2;
        server_name alazab.local erp.alazab.local crm.alazab.local *.alazab.local;

        # SSL certificate paths (update these for production)
        ssl_certificate /etc/nginx/ssl/alazab.crt;
        ssl_certificate_key /etc/nginx/ssl/alazab.key;

        # Include the same configuration as HTTP server
        include /etc/nginx/conf.d/alazab-common.conf;
    }
}
